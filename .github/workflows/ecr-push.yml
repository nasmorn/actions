name: Push image to AWS ECR

on:
  workflow_call:
    inputs:
      AWS_REGION:
        required: true
        type: string
      IMAGE_NAME:
        required: true
        type: string
      IMAGE_TAG:
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
    outputs:
      IMAGE_NAME:
        description: "Full name of the repository image"
        value: ${{ jobs.push.outputs.IMAGE }}
      IMAGE_TAG:
        description: "Tag of the repository image"
        value: ${{ jobs.push.outputs.IMAGE_TAG }}

jobs:
  push:
    runs-on: ubuntu-latest
    outputs:
      IMAGE: ${{ steps.push-to-ecr.outputs.IMAGE }}
      IMAGE_TAG: ${{ steps.push-to-ecr.outputs.IMAGE_TAG }}
    permissions:
      contents: read

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_REGION }}
          mask-aws-account-id: 'no'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.IMAGE_NAME }}-${{ github.sha }}
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/${{ inputs.IMAGE_NAME }}.tar

      - name: Push to ECR
        id: push-to-ecr
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_NAME: ${{ inputs.IMAGE_NAME }}
          IMAGE_TAG: ${{ inputs.IMAGE_TAG || github.sha }}
        run: |
          docker image tag $IMAGE_NAME:$IMAGE_TAG $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
          docker push $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
          echo "IMAGE=$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG" >> "$GITHUB_OUTPUT"
          echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_OUTPUT"
